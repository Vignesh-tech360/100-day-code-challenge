Task :
Given 2 sets of integers, M and N, print their symmetric difference in ascending order. The term symmetric difference indicates those values that exist in either M or 
N but do not exist in both.


Input Format :
The first line of input contains an integer, M.
The second line contains M space-separated integers.
The third line contains an integer, N.
The fourth line contains N space-separated integers.

Output Format :
Output the symmetric difference integers in ascending order, one per line.

=========================================================================================================================================================================
Test case:

Sample Input :
4
2 4 5 9
4
2 4 11 12

Sample Output :
5
9
11
12
========================================================================================================================================================================
Program:

M = int(input())
mset = set(map(int, input().split()))
N = int(input())
nset = set(map(int, input().split()))

mdef = mset.difference(nset)
ndef = nset.difference(mset)

output = mdef.union(ndef)

for i in sorted(list(output)):
    print(i)
    
